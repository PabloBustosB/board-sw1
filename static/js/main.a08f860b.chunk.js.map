{"version":3,"sources":["firebase/firebaseConfig.js","firebase/AuthProvider.js","pages/HomePage.js","middlewares/AuthProvider.js","middlewares/UseAuth.js","routers/PrivateRouter.js","firebase/FirestoreProvider.js","figures/Box.js","figures/Arrow.js","pages/Modal.js","pages/BoardPage.js","pages/DashboardPage.js","routers/AppRouter.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Auth","getAuth","db","getFirestore","authProvider","login","provider","GoogleAuthProvider","signInWithPopup","then","result","console","log","catch","error","message","authState","setUser","setLogged","onAuthStateChanged","user","logout","signOut","HomePage","props","className","onClick","e","src","align","AuthContext","createContext","AuthProvider","children","useState","logged","useEffect","contextValue","isLogged","Provider","value","UseAuth","useContext","PrivateRouter","unsubscribe","Component","component","rest","auth","to","DB","initBoards","setBoards","email","q","query","collection","where","orderBy","onSnapshot","querySnapshot","items","forEach","doc","push","data","id","createBoards","name","addDoc","ownerId","uid","participantsEmail","timeStamp","Timestamp","fromMillis","Date","parse","toISOString","getBoard","setBoard","boardId","deleteBoard","documentId","deleteDoc","stop","addParticipant","updateDoc","arrayUnion","removeParticipant","arrayRemove","initBoxes","setBoxes","docId","createBox","box","updateBox","deleteBox","boxId","qStart","qEnd","finished","getDocs","snapshots","ref","docs","length","initArrows","setArrows","createArrow","updateArrow","deleteArrow","Box","location","useLocation","useXarrow","x","posX","y","posY","controlledPosition","setControlledPosition","dragHandlers","onStart","onStop","boxType","title","content","type","state","onDrag","position","nexArrowId","arrows","lastBox","Number","split","bounds","top","left","onMouseDown","button","selected","setShowOptions","showOptions","arrow","setAction","setSelected","action","newArrow","start","end","dotted","options","label","handleCLick","Arrow","passProps","cursor","dashness","path","strokeWidth","labels","middle","color","Modal","setModal","BoardPage","history","useHistory","undefined","replace","board","isOwner","setIsOwner","boxes","participants","delete","modalActions","setModalActions","Object","entries","includes","boxProps","arrowProps","nexBoxId","onDragStart","dataTransfer","setData","draggable","onDragOver","preventDefault","onDrop","getData","target","getBoundingClientRect","newBox","clientX","clientY","map","index","onChange","update","onSubmit","placeholder","toUpdate","updated","findIndex","element","splice","DashboardPage","boards","modal","pathname","AppRouter","exact","SignInSide","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a08f860b.chunk.js","sourcesContent":["import {initializeApp} from \"firebase/app\";\nimport {getAuth} from \"firebase/auth\";\nimport {getFirestore} from \"firebase/firestore\";\n\n// const firebaseConfig = {\n//     apiKey: \"AIzaSyC4PipekWPzxEzFFQuGAWGqrLBlGIIlQKI\",\n//     authDomain: \"board-sw1.firebaseapp.com\",\n//     projectId: \"board-sw1\",\n//     storageBucket: \"board-sw1.appspot.com\",\n//     messagingSenderId: \"865686831321\",\n//     appId: \"1:865686831321:web:a630430ce136d1d3bd3ec8\",\n//     measurementId: \"G-Z4P5VHM4QG\"\n// };\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAxlKIe0C_C2CUbc3JSAU5mWaiNqZtDHUk\",\n  authDomain: \"board-sw1-efc4e.firebaseapp.com\",\n  projectId: \"board-sw1-efc4e\",\n  storageBucket: \"board-sw1-efc4e.appspot.com\",\n  messagingSenderId: \"785550220807\",\n  appId: \"1:785550220807:web:11a16844b2db18c9ac14a2\",\n  measurementId: \"G-J7CSCFP0Q2\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const Auth = getAuth(app);\nexport const db = getFirestore(app);","import {Auth} from \"../firebase/firebaseConfig\";\nimport {onAuthStateChanged,signOut,GoogleAuthProvider, signInWithPopup} from \"firebase/auth\";\n\nconst authState=(setUser,setLogged)=>{\n    onAuthStateChanged(Auth, (user) => {\n        if (user) {\n            setUser(user);\n            setLogged(true);\n        } else {\n            setUser(null);\n            setLogged(false);\n        }\n    });\n};\n\nconst logout =(setUser)=>{\n    signOut(Auth).then(()=>{\n        setUser(null);\n    });\n}\n\nconst login=()=> {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(Auth, provider)\n        .then((result) => {\n            console.log(result)\n        }).catch((error) => {\n        console.log(error.message);\n    });\n\n}\n\nconst authProvider={\n    login,\n    authState,\n    logout\n}\nexport default authProvider;","import React from 'react';\nimport authProvider from \"../firebase/AuthProvider\";\n\nfunction HomePage(props) {\n\n\n    return (\n        <div className={'min-h-screen flex justify-center items-center bg-blue-900'}>\n            <div className={'w-2/5 bg-white h-120 shadow-xl p-5 pt-10'}>\n                <h1 className={'text-xl font-medium text-center'}>{'Primer Parcial - Pizarra Modelo C4'}</h1>\n                <h2 className={'text-sm font-medium'}>{'Iniciar Sesion: '}</h2>\n                <div className={'flex justify-center items-center h-full'}>\n                <button className={'border rounded block my-7 inline-flex space-x-2 p-2 hover:shadow-lg '} onClick={e=>authProvider.login()}>\n                    <img src=\"https://img.icons8.com/color/24/000000/google-logo.png\"/>\n                    <span>{'Iniciar sesión'}</span>\n                </button>\n                </div>\n                <div align=\"center\">\n                <img src=\"https://pbs.twimg.com/media/E7RY54_WYAAVg-9.png\"/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default HomePage;\n","import {createContext, useEffect, useState} from 'react';\nimport {onAuthStateChanged} from \"firebase/auth\";\nimport {Auth} from \"../firebase/firebaseConfig\";\nimport authProvider from \"../firebase/AuthProvider\";\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({children}) => {\n    const [logged,setLogged]=useState(true);\n    const [user,setUser]=useState(null);\n\n    useEffect(() => {\n        authProvider.authState(setUser,setLogged)\n    },[]);\n\n    const contextValue = {\n        user,\n        setUser,\n        isLogged() {\n            return logged;\n        }\n    }\n    return <AuthContext.Provider value={contextValue}>\n        {children}\n    </AuthContext.Provider>\n\n};\n\nexport default AuthProvider;","import {React,useContext} from 'react';\nimport {AuthContext} from \"./AuthProvider\";\n\nfunction UseAuth() {\n    return useContext(AuthContext);\n}\n\nexport default UseAuth;","import React from 'react';\nimport UseAuth from \"../middlewares/UseAuth\";\nimport {Redirect, Route} from \"react-router-dom\";\n\nfunction PrivateRouter({component: Component, ...rest}) {\n    const auth = UseAuth();\n    return <Route {...rest}>\n        {auth.isLogged() ? (<Component/>\n        ) : (\n            <Redirect to={'/board-sw1'}/>\n        )}\n    </Route>;\n}\n\nexport default PrivateRouter;","import React, {useState} from 'react';\nimport {db} from \"../firebase/firebaseConfig\";\nimport {Timestamp,collection,deleteDoc, getDocs, doc, setDoc, addDoc, onSnapshot, query, where,orderBy,updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore\";\n\nlet unsubscribe;\nconst initBoards=(setBoards,email)=>{\n    const q = query(collection(db, \"boards\"),where(\"participantsEmail\", \"array-contains\",email),orderBy(\"timeStamp\", \"desc\"));\n    unsubscribe=onSnapshot(q, (querySnapshot) => {\n        const items = [];\n        querySnapshot.forEach((doc) => {\n            items.push({...doc.data(),id:doc.id});\n        });\n        setBoards(items);\n        console.log(items);\n    });\n};\n\nconst stop=()=>{\n    return unsubscribe();\n}\n\nconst createBoards=(name,user)=>{\n    addDoc(collection(db, \"boards\"), {\n        name:name,\n        ownerId: user.uid,\n        participantsEmail: [user.email],\n        timeStamp: Timestamp.fromMillis(\n            Date.parse((new Date()).toISOString()))\n    });\n};\n\nconst getBoard=(setBoard,boardId)=>{\n    onSnapshot(doc(db, \"boards\", boardId), (doc) => {\n        setBoard(doc.data());\n    });\n}\n\nconst deleteBoard=(documentId)=>{\n    return deleteDoc(doc(db, \"boards\", documentId));\n}\n\nconst addParticipant=(email, boardId)=>{\n    updateDoc(doc(db, \"boards\", boardId), {\n        participantsEmail: arrayUnion(email)\n    });\n}\nconst removeParticipant=(email, boardId)=>{\n    updateDoc(doc(db, \"boards\", boardId), {\n        participantsEmail: arrayRemove(email)\n    });\n}\n\n\nconst initBoxes=(setBoxes,boardId)=>{\n    const q = query(collection(db, \"boards\",boardId,\"boxes\"),orderBy(\"id\", \"asc\"));\n    unsubscribe=onSnapshot(q, (querySnapshot) => {\n        const items = [];\n        querySnapshot.forEach((doc) => {\n            items.push({...doc.data(),docId:doc.id});\n        });\n        setBoxes(items);\n        console.log(items)\n    });\n};\nconst createBox=(boardId,box)=>{\n    addDoc(collection(db, \"boards\",boardId,\"boxes\"),box);\n};\nconst updateBox=(boardId,box)=>{\n    updateDoc(doc(db, \"boards\",boardId,\"boxes\",box.docId),box);\n\n    //eliminar flechas tambien\n}\nconst deleteBox=(boardId,docId,boxId)=>{\n    console.log(boxId);\n    const qStart = query(collection(db, \"boards\",boardId,\"arrows\"), where('start', '==', boxId));\n    const qEnd = query(collection(db, \"boards\",boardId,\"arrows\"), where('end', '==', boxId));\n    let finished=false;\n    getDocs(qStart).then((snapshots)=>{\n        snapshots.forEach((doc)=>{\n            deleteDoc(doc.ref);\n        });\n        if (finished)deleteDoc(doc(db, \"boards\",boardId,\"boxes\",docId));\n        else finished=!finished;\n    });\n    getDocs(qEnd).then((snapshots)=>{\n        console.log(snapshots.docs.length);\n        snapshots.forEach(doc=>{\n            deleteDoc(doc.ref);\n        });\n        if (finished)deleteDoc(doc(db, \"boards\",boardId,\"boxes\",docId));\n        else finished=!finished;\n    });\n}\n\n\nconst initArrows=(setArrows,boardId)=>{\n    const q = query(collection(db, \"boards\",boardId,\"arrows\"),orderBy(\"id\", \"asc\"));\n    unsubscribe=onSnapshot(q, (querySnapshot) => {\n        const items = [];\n        querySnapshot.forEach((doc) => {\n            items.push({...doc.data(),docId:doc.id});\n        });\n        setArrows(items);\n    });\n};\nconst createArrow=(boardId,box)=>{\n    addDoc(collection(db, \"boards\",boardId,\"arrows\"),box);\n};\nconst updateArrow=(boardId,box)=>{\n    updateDoc(doc(db, \"boards\",boardId,\"arrows\",box.docId),box);\n}\nconst deleteArrow=(boardId,boxId)=>{\n    deleteDoc(doc(db, \"boards\",boardId,\"arrows\",boxId));\n}\n\n\n\nconst DB ={\n    initBoards,\n    createBoards,\n    getBoard,\n    deleteBoard,\n    stop,\n    addParticipant,\n    removeParticipant,\n    initBoxes,\n    createBox,\n    updateBox,\n    deleteBox,\n    initArrows,\n    createArrow,\n    updateArrow,\n    deleteArrow\n}\n\n\nexport default DB;","import React, {useEffect, useState} from 'react';\nimport {useXarrow} from \"react-xarrows\";\nimport Draggable from \"react-draggable\";\nimport DB from \"../firebase/FirestoreProvider\";\nimport {useLocation} from \"react-router-dom\";\n\n\nfunction Box(props) {\n    const location = useLocation();\n\n        const updateXarrow = useXarrow();\n        const [controlledPosition,setControlledPosition]=useState({\n                x: props.posX, y: props.posY\n        });\n\n        useEffect(()=>{\n            setControlledPosition({x: props.posX, y: props.posY});\n        },[props.posX,props.posY]);\n\n\n\n        const onControlledDrag = (e, position) => {\n            let {x, y} = position;\n            setControlledPosition({x, y});\n        };\n        const onStart = () => {\n        };\n\n        const onStop = () => {\n            const box={id:props.id,x:controlledPosition.x,y:controlledPosition.y,\n                boxType:props.boxType,title:props.title,content:props.content,type:'box',docId:props.docId};\n            DB.updateBox(location.state.boardId,box)\n        };\n\n        const dragHandlers = {onStart: onStart, onStop: onStop, onDrag:onControlledDrag};\n\n    function createBox() {\n        if(props.boxType==='person'){\n            return(\n                <div className={props.action.name==='addArrow'?props.selected.id!==props.id?'personSelected':'person':'person'}  id={props.id}>\n                    <div className={'rounded-full w-14 h-14 bg-blue-900'}></div>\n                    <div className={'rounded w-full bg-blue-900 p-5 -mt-2 text-center'}>\n\n                    <p className={'title'}>{props.title}</p>\n                    <p className={'subtitle'}>{\"[Person]\"}</p>\n                    <p>{props.content}</p>\n                    </div>\n                </div>\n            )\n        }\n\n        if(props.boxType==='system'){\n               return(\n                   <div className={props.action.name==='addArrow'?props.selected.id!==props.id?'systemSelected':'system':'system' }  id={props.id} >\n                       <p className={'title'}>{props.title}</p>\n                       <p className={'subtitle'}>{\"[Software System]\"}</p>\n                       <p >{props.content}</p>\n                   </div>\n               )\n        }\n        if(props.boxType==='container'){\n            return(\n                <div className={props.action.name==='addArrow'?props.selected.id!==props.id?'containerSelected':'container':'container'}  id={props.id}>\n                    <p className={'title'}>{props.title}</p>\n                    <p className={'subtitle'}>{\"[Container]\"}</p>\n                    <p >{props.content}</p>\n                </div>\n            )\n        }\n\n        if(props.boxType==='database'){\n            return(\n                <div className={props.action.name==='addArrow'?props.selected.id!==props.id?'cylinderSelected':'cylinder':'cylinder'}  id={props.id}>\n                    <p className={'title-black'}>{props.title}</p>\n                    <p className={'subtitle'}>{\"[Container: Database]\"}</p>\n                    <p className={'text-center text-black'}>{props.content}</p>\n                </div>\n            )\n        }\n        if(props.boxType==='component'){\n            return(\n                <div className={props.action.name==='addArrow'?props.selected.id!==props.id?'componentSelected':'component':'component'}  id={props.id}>\n                    <p className={'title'}>{props.title}</p>\n                    <p className={'subtitle'}>{\"[Component]\"}</p>\n                    <p >{props.content}</p>\n                </div>\n            )\n        }\n\n    }\n\n    function nexArrowId() {\n        let id = 'arrow-0'\n        if (props.arrows.length === 0) return id;\n        else {\n            const lastBox = props.arrows[props.arrows.length - 1];\n            const lastNumber = Number((lastBox.id.split('-'))[1]) + 1;\n            return 'arrow-' + lastNumber;\n        }\n    }\n\n    function handleCLick(e) {\n        if(e.button===2) {\n            if(props.selected.id===props.id) {\n                props.setShowOptions({box:!props.showOptions.box,arrow:false});\n                props.setAction('');\n            }else{\n                props.setSelected({id:props.id,x:controlledPosition.x,y:controlledPosition.y,\n                    boxType:props.boxType,title:props.title,content:props.content,type:'box',docId:props.docId});\n\n                props.setShowOptions({box:true,arrow:false});\n            }\n        }\n        if(e.button===0){\n            switch (props.action.name) {\n                case 'addArrow':\n                    if(props.selected.id===props.id){\n                        props.setAction('');\n                        break;\n                    }\n                    const newArrow={id:nexArrowId(),start:props.selected.id, end:props.id,\n                        dotted:props.action.options.dotted, label:'label',docId:0}\n\n                    DB.createArrow(location.state.boardId,newArrow);\n\n                    props.setArrows([...props.arrows,newArrow]);\n                    props.setAction('');\n                    break;\n                default :\n                    props.setAction('');\n                    break;\n            }\n\n        }\n    }\n\n    return (\n            <Draggable position={controlledPosition} {...dragHandlers}\n                         bounds={{top: 0, left: 0}}\n                        onMouseDown={(e)=>handleCLick(e)}>\n                {createBox()}\n            </Draggable>\n\n        );\n}\n\nexport default Box;","import React from 'react';\nimport Xarrow, {useXarrow, Xwrapper} from 'react-xarrows';\n\n\nfunction Arrow(props) {\n\n    function handleCLick() {\n        props.setAction('');\n        props.setShowOptions({box:false,arrow:!props.showOptions.arrow});\n        props.setSelected({id:props.id, start:props.start, end:props.end,\n            dotted:props.dotted, label: props.label,type:'arrow',docId:props.docId});\n    }\n\n    const passProps={\n        onClick: () => handleCLick(),\n        cursor: 'pointer'\n    }\n\n\n    return (\n        <Xarrow dashness={props.dotted} path={'straight'} strokeWidth={2} labels={{ middle: props.label }}\n                start={props.start} end={props.end} passProps={passProps} color={'gray'}/>\n\n    );\n}\n\nexport default Arrow;","import React from 'react';\n\nfunction Modal(props) {\n    return <div\n        className={\"absolute top-0 left-0 flex items-start justify-center z-50 w-full h-full bg-gray-200 bg-opacity-50 py-20\"}>\n        <div className=\"h-auto p-4 mx-2 text-left bg-white rounded shadow-xl lg:w-1/2 w-full space-y-5\">\n            <div className=\"flex justify-between border-b border-gray-300 pb-2\">\n                <h3 className=\"text-lg font-medium leading-6 text-gray-900 w-full\">\n                    {props.title}\n                </h3>\n                <button className=\"order-last font-medium\" onClick={e => props.setModal(props.value)}>\n                   X\n                </button>\n            </div>\n            {props.children}\n        </div>\n    </div>\n}\n\nexport default Modal;","import React, {useEffect, useRef, useState} from 'react';\nimport {Xwrapper} from 'react-xarrows';\nimport Box from \"../figures/Box\";\nimport Arrow from \"../figures/Arrow\";\nimport {useLocation, useHistory, Redirect} from \"react-router-dom\";\nimport DB from \"../firebase/FirestoreProvider\";\nimport Modal from \"./Modal\";\nimport UseAuth from \"../middlewares/UseAuth\";\n\nfunction BoardPage(props) {\n    const location = useLocation();\n    const history = useHistory();\n    const auth = UseAuth();\n    console.log(location)\n    if (location.state === undefined) {\n        history.replace('/')\n    }\n\n    const [board, setBoard] = useState({});\n    const [isOwner, setIsOwner] = useState(false);\n\n    const [boxes, setBoxes] = useState([]);\n    const [arrows, setArrows] = useState([]);\n\n    const [action, setAction] = useState({});\n    const [selected, setSelected] = useState({});\n    const [showOptions, setShowOptions] = useState({box: false, arrow: false});\n    const [modalActions, setModalActions] = useState({participants: false, delete: false});\n\n    useEffect(() => {\n        if(board===undefined) history.replace('/');\n        else if (Object.entries(board).length !== 0)\n            if (!board.participantsEmail.includes(auth.user.email)) history.replace('/');\n            else setIsOwner(board.ownerId === auth.user.uid);\n    }, [board]);\n\n\n    useEffect(() => {\n        if (board!==undefined && Object.entries(board).length === 0) {\n            DB.getBoard(setBoard, location.state.boardId);\n            DB.initBoxes(setBoxes, location.state.boardId)\n            DB.initArrows(setArrows, location.state.boardId)\n        }\n    }, [board]);\n\n\n\n\n\n\n\n    const boxProps = {\n        showOptions,\n        setShowOptions,\n        action,\n        setAction,\n        selected,\n        setSelected,\n        arrows,\n        setArrows,\n    }\n    const arrowProps = {\n        showOptions,\n        setShowOptions,\n        selected,\n        setSelected,\n        setAction\n    }\n\n    function nexBoxId() {\n        let id = 'box-0'\n        if (boxes.length === 0) return id;\n        else {\n            const lastBox = boxes[boxes.length - 1];\n            const lastNumber = Number((lastBox.id.split('-'))[1]) + 1;\n            return 'box-' + lastNumber;\n        }\n    }\n\n    const handleDropDynamic = (e) => {\n        let boxType = e.dataTransfer.getData('shape');\n        let {x, y} = e.target.getBoundingClientRect();\n        let newBox = {\n            id: nexBoxId(), x: e.clientX - x, y: e.clientY - y, boxType: boxType,\n            title: 'título', content: 'descripción', docId: 0,\n        };\n        DB.createBox(location.state.boardId, newBox);\n        setBoxes([...boxes, newBox]);\n    };\n\n    return (\n        <div className={'flex min-h-screen'}>\n            <div className={'w-48 border border-4 shadow-xl p-5 flex flex-col justify-between'}>\n                <div className={'space-y-5 flex flex-col justify-center items-center'}>\n                    <div className={'rounded text-white flex flex-col justify-center items-center'}\n                         onDragStart={(e) => e.dataTransfer.setData('shape', 'person')}\n                         draggable={'true'}>\n                        <div className={'rounded-full w-10 h-10 bg-blue-900'}></div>\n                        <div className={'rounded w-full bg-blue-900 p-5 -mt-2 text-center'}>Person</div>\n                    </div>\n\n                    <div className={'rounded w-28 p-5 border-2 bg-grey text-white'}\n                         onDragStart={(e) => e.dataTransfer.setData('shape', 'system')}\n                         draggable={'true'}>Software System\n                    </div>\n\n                    <div className={'rounded p-5 border-2 bg-blue-500 text-white'}\n                         onDragStart={(e) => e.dataTransfer.setData('shape', 'container')}\n                         draggable={'true'}>Container \n                    </div>\n                    <div className={'db text-center p-5'}\n                         onDragStart={(e) => e.dataTransfer.setData('shape', 'database')}\n                         draggable={'true'}>\n                        <p className={'tex-center text-black'}>Database</p>\n                    </div>\n\n                    <div className={'rounded p-5 border-2 bg-blue-400 text-white'}\n                         onDragStart={(e) => e.dataTransfer.setData('shape', 'component')}\n                         draggable={'true'}>Component\n                    </div>\n\n                </div>\n\n                <div className={'space-y-2 flex flex-col'}>\n                    <button className={'w-full rounded p-1 hover:shadow-lg bg-gray-600 text-white font-medium'}\n                            onClick={e => setModalActions({\n                                participants: true,\n                                delete: false\n                            })}>{'Participantes'}</button>\n\n                    <button className={'w-full rounded p-1 hover:shadow-lg bg-gray-600 text-white font-medium'}\n                            onClick={e => {\n                                history.push('/board-sw1')\n                            }}>{'Salir'}</button>\n                    {isOwner &&\n                    <button className={'w-full rounded p-1 hover:shadow-lg bg-red-600 text-white font-medium'}\n                            onClick={e => setModalActions({\n                                participants: false,\n                                delete: true\n                            })}>{'Eliminar'}</button>\n                    }\n                </div>\n            </div>\n\n\n            <div className={'w-full relative overflow-auto bg-yellow-50'}>\n                <Xwrapper>\n\n                    <div className={'w-full h-full p-2'}\n                         onDragOver={(e) => e.preventDefault()}\n                         onDrop={handleDropDynamic}>\n                        {boxes.map(box => {\n                            return <Box key={box.id} id={box.id} boxType={box.boxType} posX={box.x} posY={box.y}\n                                        {...boxProps} title={box.title} content={box.content} docId={box.docId}/>\n                        })}\n                        {arrows.map((arrow, index) => {\n                            return <Arrow key={index} id={arrow.id} start={arrow.start} end={arrow.end}\n                                          dotted={arrow.dotted}\n                                          {...arrowProps} label={arrow.label} docId={arrow.docId}/>\n                        })}\n                    </div>\n                </Xwrapper>\n            </div>\n\n            {showOptions.box && (<div className={'w-48 border border-4 shadow-xl p-2'}>\n                <p className={'text-md font-medium text-center uppercase'}>{selected.id}</p>\n                <div className={'w-full h-0.5 bg-gray-200'}/>\n\n                <div className={'space-y-2 mt-5'}>\n                    <div>\n                        <label>{'Título'}</label>\n                        <input className={'w-full border'} type=\"text\" value={selected.title}\n                               onChange={e => update(e, 'box', 'title')}/>\n                    </div>\n                    <div>\n                        <label>{'Descripción'}</label>\n                        <textarea className={'w-full border'} value={selected.content}\n                                  onChange={e => update(e, 'box', 'content')}/>\n                    </div>\n                </div>\n                <p className={'text-md font-medium text-center mt-8 uppercase'}>{'Flechas'}</p>\n                <div className={'w-full h-0.5 bg-gray-200'}/>\n\n\n                <button className={'block'} onClick={e => {\n                    setAction({name: 'addArrow', options: {dotted: false}})\n                }}>{\"->\"}\n                </button>\n                <button className={'block'} onClick={e => {\n                    setAction({name: 'addArrow', options: {dotted: true}})\n                }}>{\"---->\"}\n                </button>\n\n                <button className={'border-2 w-full mt-8 bg-gray-300'}\n                        onClick={e => DB.deleteBox(location.state.boardId, selected.docId,selected.id)}>{'Eliminar'}</button>\n                <button className={'border-2 w-full mt-8 bg-gray-300'} onClick={e => setShowOptions({})}>{'Cerrar'}</button>\n\n            </div>)}\n\n            {showOptions.arrow && (<div className={'w-48 border border-4 shadow-xl p-2'}>\n                <p className={'text-md font-medium text-center uppercase'}>{selected.id}</p>\n                <div className={'w-full h-0.5 bg-gray-200'}/>\n                <div className={'mt-5'}>\n                    <label>Nombre</label>\n                    <input className={'w-full border'} type=\"text\" value={selected.label}\n                           onChange={e => update(e, 'arrow', 'label')}/>\n                </div>\n\n                <div className={'mt-2'}>\n                    <label>Conector</label>\n                    <select className={'w-full'} onChange={e => update(e, 'arrow', e.target.value)}>\n                        <option value=\"normal\"> {\"->\"} </option>\n                        <option value=\"dotted\"> {\"--->\"} </option>\n                    </select>\n                </div>\n\n                <button className={'border-2 w-full mt-8 bg-gray-300'}\n                        onClick={e => DB.deleteArrow(location.state.boardId, selected.docId)}>{'Eliminar'}</button>\n\n                <button className={'border-2 w-full mt-8 bg-gray-300'}\n                        onClick={e => setShowOptions({box: false, arrow: false})}>{'Cerrar'}</button>\n\n            </div>)}\n\n            {modalActions.delete &&\n            <Modal title={'Eliminar Tablero'} setModal={setModalActions} value={{participants: false, delete: false}}>\n                <div className={'p-5 space-y-10'}>\n                    <p>{'¿Estas seguro que quieres eliminar este tablero?'}</p>\n                    <div className={'flex justify-end space-x-2'}>\n                        <button className={'rounded p-2 hover:shadow-lg bg-gray-300 text-black font-medium'}\n                                onClick={e => setModalActions({participants: false, delete: false})}>{'Cerrar'}</button>\n\n                        <button className={'rounded p-2 hover:shadow-lg bg-red-500 text-white font-medium'}\n                                onClick={e => {\n                                    DB.deleteBoard(location.state.boardId).then(() => {\n                                        history.push('/board-sw1')\n                                    })\n                                }}>{'Eliminar'}</button>\n\n                    </div>\n\n                </div>\n\n                <div className={'flex justify-center'}>\n                </div>\n            </Modal>}\n\n            {modalActions.participants &&\n            <Modal title={'Participantes'} setModal={setModalActions} value={{participants: false, delete: false}}>\n                <div className={'p-5 space-y-10'}>\n                    {isOwner && <form className={'flex space-x-2'}\n                                      onSubmit={e => {\n                                          e.preventDefault();\n                                          DB.addParticipant(e.target.email.value, location.state.boardId)\n                                      }}>\n                        <input className={'w-full'} type=\"text\" name={'email'} placeholder={'Correo del participante'}/>\n                        <button\n                            className={'rounded p-2 hover:shadow-lg bg-gray-500 text-white font-medium'}>{'Agregar'}</button>\n                    </form>}\n                    <div className={'space-y-2'}>\n                        {board.participantsEmail.map((email, index) => {\n                            return <div key={index} className={'flex space-x-2 items-center justify-center'}>\n                                <p className={'w-full block border-2 p-1.5 rounded text-gray-600 font-medium'}>{email}</p>\n                                {isOwner &&\n                                <button className={'rounded p-2 hover:shadow-lg bg-red-500 text-white font-medium'}\n                                        onClick={e => DB.removeParticipant(email, location.state.boardId)}>{'Eliminar'}</button>}\n                            </div>\n                        })}\n                    </div>\n\n\n                </div>\n\n\n            </Modal>}\n        </div>\n    );\n\n    function update(e, type, toUpdate) {\n        if (type === 'box') {\n            let updated = [...boxes];\n            const position = updated.findIndex((element) => selected.id === element.id);\n            const value = toUpdate === 'title' ? {title: e.target.value} : {content: e.target.value};\n            updated.splice(position, 1, {...updated[position], ...value});\n            setSelected({...selected, ...value});\n            //DB.updateBox(location.state.boardId, selected)\n            DB.updateBox(location.state.boardId, updated[position])\n            setBoxes(updated);\n\n        } else {\n            let updated = [...arrows];\n            const position = updated.findIndex((element) => selected.id === element.id);\n\n            let value;\n            switch (toUpdate) {\n                case 'dotted':\n                    value = {dotted: true}\n                    break;\n                case 'normal':\n                    value = {dotted: false}\n                    break;\n                case 'label':\n                    value = {label: e.target.value}\n                    break;\n                default:\n                    //value = {dotted: false};\n                    break;\n            }\n            updated.splice(position, 1, {...updated[position], ...value});\n            setSelected({...selected, ...value});\n            DB.updateArrow(location.state.boardId, updated[position])\n            setArrows(updated);\n        }\n    }\n}\n\nexport default BoardPage;","import React, {useEffect, useState} from 'react';\nimport DB from \"../firebase/FirestoreProvider\";\nimport UseAuth from \"../middlewares/UseAuth\";\nimport Modal from \"./Modal\";\nimport authProvider from \"../firebase/AuthProvider\";\n\nimport {Link} from \"react-router-dom\";\n\n\nfunction DashboardPage(props) {\n\n    const auth = UseAuth();\n    const [boards, setBoards] = useState([]);\n    const [modal, setModal] = useState(false);\n    useEffect(() => {\n        if(auth.user) DB.initBoards(setBoards,auth.user.email);\n    }, [auth.user]);\n\n\n\n\n    return (\n        <div className={'bg-blue-50 min-h-screen'}>\n            <header>\n                <div className={'h-16 bg-ligtblue shadow-lg flex justify-between items-center px-5'}>\n                    <h1 className={'text-xl font-medium'}>{'Diagramas en modelo c4'}</h1>\n                    <button className={'order-last border rounded p-2 hover:shadow-lg'}\n                    onClick={e=>{authProvider.logout(auth.setUser)}}>{'Cerrar sesión'}</button>\n                </div>\n            </header>\n            <div className={'flex flex-col justify-center m-10 space-y-10'}>\n\n                <div className={'flex justify-center'}>\n                    <button className={'rounded p-2 hover:shadow-lg bg-ligtblue text-black font-medium'}\n                            onClick={e => setModal(true)}>{'Crear nueva sala'}</button>\n                </div>\n                <div className={'grid grid-cols-5 gap-4'}>\n                    {\n                        boards.map((board, index) => {\n                            return  <Link  key={index} to={{pathname:`/board-sw1/board/${board.name}`,state:{boardId:board.id}}} onClick={e =>DB.stop()}>\n                             <div className={'bg-ligtblue h-48 flex justify-center items-center shadow-lg rounded hover:bg-gray-200'}>\n                                 <h2 className={'text-xl order-none capitalize font-medium pt-5'}>{board.name}</h2>\n                             </div>\n                            </Link>\n                        })\n                    }\n\n\n                </div>\n            </div>\n            {modal && <Modal title={'Crear Nueva Sala'} setModal={setModal} value={false}>\n                <form className={'w-full p-5 flex flex-col justify-center space-y-2'}\n                      onSubmit={e => {e.preventDefault();DB.createBoards(e.target.name.value, auth.user);setModal(false)}}>\n                    <div>\n                    <label>Nombre</label>\n                    <input className={'w-full'} type=\"text\" id={'name'}/>\n                    </div>\n                    <div className={'flex justify-center'}>\n                    <button className={'rounded p-2 hover:shadow-lg bg-gray-600 text-white font-medium'}>{'Crear'}</button>\n                    </div>\n                </form>\n            </Modal>}\n        </div>\n    );\n}\n\nexport default DashboardPage;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport SignInSide from \"../pages/HomePage\";\nimport PrivateRouter from \"./PrivateRouter\";\nimport BoardPage from \"../pages/BoardPage\";\nimport UseAuth from \"../middlewares/UseAuth\";\nimport DashboardPage from \"../pages/DashboardPage\";\n\n\nfunction AppRouter(props) {\n    const auth = UseAuth();\n    return (\n        <Router>\n            <Switch>\n                <Route exact path={'/board-sw1'} component={auth.isLogged()?DashboardPage:SignInSide}/>\n                <PrivateRouter path={'/board-sw1/board/:name'} component={BoardPage}/>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import AppRouter from \"./routers/AppRouter\";\nimport AuthProvider from \"./middlewares/AuthProvider\";\nimport FirestoreProvider from \"./firebase/FirestoreProvider\";\n\nfunction App() {\n    //window.addEventListener(\"contextmenu\", e => e.preventDefault());\n    return (\n        <AuthProvider>\n                <AppRouter/>\n        </AuthProvider>\n\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}